/*let currentOrderId = null;

function showOrderDetail(maDH) {
	currentOrderId = maDH;

	// üî• 1. C·∫≠p nh·∫≠t ti√™u ƒë·ªÅ modal tr∆∞·ªõc khi g·ªçi AJAX
	const modalTitleSpan = document.getElementById('modal-order-id-display');
	if (modalTitleSpan) {
		modalTitleSpan.textContent = ` ${maDH}`;
	}

	// G·ªçi AJAX ƒë·ªÉ l·∫•y chi ti·∫øt ƒë∆°n h√†ng (endpoint tr·∫£ v·ªÅ JSON)
	fetch('/inventory/orders/' + maDH + '/details')
		.then(response => response.json())
		.then(data => {
			const tbody = document.getElementById('order-detail-body');
			tbody.innerHTML = ''; // x√≥a c≈©

			// L·∫∑p qua t·ª´ng chi ti·∫øt ƒë∆°n h√†ng (s·∫£n ph·∫©m)
			data.forEach((item, index) => {
			    
				// üî• 1. T·∫°o n·ªôi dung HTML cho c·ªôt Nguy√™n li·ªáu
				const materialContent = item.chiTietNguyenLieu && item.chiTietNguyenLieu.length > 0
					? `<ul class="list-unstyled text-start m-0 p-0 ps-3 small">` +
					  item.chiTietNguyenLieu.map(material => `
							<li>
								- ${material.tenNguyenLieu}: 
								<span class="fw-bold">${material.tongSoLuongCan}</span> 
								<span class="text-muted">(${material.donViTinh})</span>
							</li>
					  `).join('') + `</ul>`
					: '<span class="text-muted">Kh√¥ng √°p d·ª•ng</span>';


				// üî• 2. H√†ng ch√≠nh hi·ªÉn th·ªã th√¥ng tin s·∫£n ph·∫©m v√† c·ªôt Nguy√™n li·ªáu
				const productRow = document.createElement('tr');
				productRow.innerHTML = `
					<td>${index + 1}</td>
					<td>${item.tenSanPham}</td>
					<td>${item.soLuong}</td>
				    
					<td class="text-start">${materialContent}</td>
				`;
			    
				// üî• 3. Ch·ªâ th√™m h√†ng ch√≠nh, lo·∫°i b·ªè h√†ng ph·ª• (materialRow)
				tbody.appendChild(productRow);
			});

			// Hi·ªÉn th·ªã modal
			const modal = new bootstrap.Modal(document.getElementById('orderDetailModal'));
			modal.show();
		})
		.catch(error => {
			// ƒê·∫∑t l·∫°i ti√™u ƒë·ªÅ n·∫øu c√≥ l·ªói
			 if (modalTitleSpan) {
				modalTitleSpan.textContent = "";
			}
			console.error('Error fetching order details:', error);
			alert('C√≥ l·ªói x·∫£y ra khi l·∫•y chi ti·∫øt ƒë∆°n h√†ng.');
		});
}

function confirmOrder() {
	if (currentOrderId !== null) {
		const modalEl = document.getElementById('orderDetailModal');
		const modal = bootstrap.Modal.getInstance(modalEl);
		
		fetch('/inventory/orders/' + currentOrderId + '/confirm', { method: 'POST' })
			.then(response => {
				if (response.ok) {
					// S·ª≠ d·ª•ng currentOrderId trong th√¥ng b√°o
					alert('ƒê∆°n h√†ng c√≥ m√£ ' + currentOrderId + ' ƒë√£ ƒë√≥ng g√≥i th√†nh c√¥ng');
					window.location.reload(); 
					
				} else {
					return response.text().then(errorMessage => {
						throw new Error(errorMessage); 
					});
				}
			})
			.catch(error => {
				console.error('L·ªói x√°c nh·∫≠n ƒë∆°n h√†ng:', error.message);
				alert(error.message); 
			})
			.finally(() => {
				if (modal) {
					modal.hide();
				}
			    
				// X√≥a m√£ ƒë∆°n h√†ng kh·ªèi ti√™u ƒë·ªÅ sau khi modal ƒë√≥ng (optional)
				const modalTitleSpan = document.getElementById('modal-order-id-display');
				if (modalTitleSpan) {
					modalTitleSpan.textContent = "";
				}
			});
	}
}*/

let currentOrderId = null;

function showOrderDetail(maDH) {
	currentOrderId = maDH;

	// üî• 1. C·∫≠p nh·∫≠t ti√™u ƒë·ªÅ modal tr∆∞·ªõc khi g·ªçi AJAX
	const modalTitleSpan = document.getElementById('modal-order-id-display');
	if (modalTitleSpan) {
		modalTitleSpan.textContent = ` ${maDH}`;
	}

	// G·ªçi AJAX ƒë·ªÉ l·∫•y chi ti·∫øt ƒë∆°n h√†ng (endpoint tr·∫£ v·ªÅ JSON)
	fetch('/inventory/orders/' + maDH + '/details')
		.then(response => response.json())
		.then(data => {
			const tbody = document.getElementById('order-detail-body');
			tbody.innerHTML = ''; // x√≥a c≈©

			// L·∫∑p qua t·ª´ng chi ti·∫øt ƒë∆°n h√†ng (s·∫£n ph·∫©m)
			data.forEach((item, index) => {

				// üî• 1. T·∫°o n·ªôi dung HTML cho c·ªôt Nguy√™n li·ªáu
				const materialContent = item.chiTietNguyenLieu && item.chiTietNguyenLieu.length > 0
					? `<ul class="list-unstyled text-start m-0 p-0 ps-3 small">` +
					item.chiTietNguyenLieu.map(material => `
                            <li>
                                - ${material.tenNguyenLieu}: 
                                <span class="fw-bold">${material.tongSoLuongCan}</span> 
                                <span class="text-muted">(${material.donViTinh})</span>
                            </li>
                      `).join('') + `</ul>`
					: '<span class="text-muted">Kh√¥ng √°p d·ª•ng</span>';


				// üî• 2. H√†ng ch√≠nh hi·ªÉn th·ªã th√¥ng tin s·∫£n ph·∫©m v√† c·ªôt Nguy√™n li·ªáu
				const productRow = document.createElement('tr');
				productRow.innerHTML = `
                    <td>${index + 1}</td>
                    <td>${item.tenSanPham}</td>
                    <td>${item.soLuong}</td>
                    
                    <td class="text-start">${materialContent}</td>
                `;

				// üî• 3. Ch·ªâ th√™m h√†ng ch√≠nh, lo·∫°i b·ªè h√†ng ph·ª• (materialRow)
				tbody.appendChild(productRow);
			});

			// Hi·ªÉn th·ªã modal
			const modal = new bootstrap.Modal(document.getElementById('orderDetailModal'));
			modal.show();
		})
		.catch(error => {
			// ƒê·∫∑t l·∫°i ti√™u ƒë·ªÅ n·∫øu c√≥ l·ªói
			if (modalTitleSpan) {
				modalTitleSpan.textContent = "";
			}
			console.error('Error fetching order details:', error);
			alert('C√≥ l·ªói x·∫£y ra khi l·∫•y chi ti·∫øt ƒë∆°n h√†ng.');
		});
}

function confirmOrder() {
	if (currentOrderId !== null) {
		const modalEl = document.getElementById('orderDetailModal');
		const modal = bootstrap.Modal.getInstance(modalEl);

		fetch('/inventory/orders/' + currentOrderId + '/confirm', { method: 'POST' })
			.then(response => {
				if (response.ok) {
					// S·ª≠ d·ª•ng currentOrderId trong th√¥ng b√°o
					alert('ƒê∆°n h√†ng c√≥ m√£ ' + currentOrderId + ' ƒë√£ ƒë√≥ng g√≥i th√†nh c√¥ng');

					// START: Th√™m logic c·∫≠p nh·∫≠t checkbox
					const checkbox = document.getElementById('confirm-check-' + currentOrderId);
					if (checkbox) {
						checkbox.checked = true; // Tick ch·ªçn checkbox
					}
					// END: Th√™m logic c·∫≠p nh·∫≠t checkbox

					window.location.reload();

				} else {
					return response.text().then(errorMessage => {
						throw new Error(errorMessage);
					});
				}
			})
			.catch(error => {
				console.error('L·ªói x√°c nh·∫≠n ƒë∆°n h√†ng:', error.message);
				alert(error.message);
			})
			.finally(() => {
				if (modal) {
					modal.hide();
				}

				// X√≥a m√£ ƒë∆°n h√†ng kh·ªèi ti√™u ƒë·ªÅ sau khi modal ƒë√≥ng (optional)
				const modalTitleSpan = document.getElementById('modal-order-id-display');
				if (modalTitleSpan) {
					modalTitleSpan.textContent = "";
				}
			});
	}
}